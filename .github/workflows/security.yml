name: Security

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  schedule:
    # Run weekly on Monday at 00:00 UTC
    - cron: '0 0 * * 1'

jobs:
  # CodeQL analysis
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['go', 'javascript']

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Dependency scanning
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high

  # Go security scanning
  gosec:
    name: Go Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.0'

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: '-fmt sarif -out gosec-results.sarif ./...'

      - name: Upload Gosec results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gosec-results.sarif

  # Smart contract security
  slither:
    name: Slither Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: contracts/ethereum
        run: npm ci

      - name: Compile contracts for Slither
        working-directory: contracts/ethereum
        run: npx hardhat compile

      - name: Run Slither
        working-directory: contracts/ethereum
        run: |
          pip3 install slither-analyzer
          slither . \
            --compile-force-framework hardhat \
            --filter-paths "node_modules|test" \
            --exclude-dependencies \
            --sarif slither-results.sarif || true

      - name: Move SARIF file
        run: mv contracts/ethereum/slither-results.sarif slither-results.sarif || true

      - name: Upload Slither results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: slither-results.sarif

  # Secret scanning
  gitleaks:
    name: GitLeaks Secret Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        run: |
          docker run -v ${PWD}:/path zricethezav/gitleaks:latest detect --source="/path" --verbose --no-git --exit-code=0 || true

  # License compliance
  license-check:
    name: License Compliance
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Check Go licenses
        uses: google/go-licenses@v1.6.0
        with:
          args: check ./...

      - name: Check npm licenses
        working-directory: contracts/ethereum
        run: |
          npx license-checker --summary
          npx license-checker --failOn "GPL;AGPL"
